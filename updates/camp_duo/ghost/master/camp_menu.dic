//---------------------------Menus--------------------------
//This .dic file is primarily concerned with the double-click menus for each of your ghosts.
//menu.dic also contains the settings for a config menu that will let your user change their name or pronouns if they want, as well as the talk rate of the ghost, all of which are useful things for your ghost to do.


//--Test Variable --------------------------------------------------------
//You can also use this to test functions as I mentioned above by adding \![raise,function] at the end of it, although you can do this with Script Input as well.
Select.testvariable
{
	"\1\s[11]%(fuck) %(bitch) %(hell) %(damn) %(shit) %(bullshit) %(asshole) \0\s[1]Language!!\e"
}



//--OpenSakuraMenu
//This is a bit of intro dialogue before the main character opens their menu.
//The \b2 tag tells the ghost to use their big balloon for this dialogue. If your menu has a lot of stuff, this'll probably look better than the small one.

OpenSakuraMenu
{
	"\0\s[0]\b2"
	--
	"\i[9]\i[19]Campe Diem!"
	
	"What's on your mind,\w4 pal?"
	
	"\i[15]Hmm?\w8 Do you need something?"
	--
	OnMenuRun
}

//--MenuRun
//\_q means quick session, meaning all the text from this point on will display instantly
// \![*]\q[Displayed Name,linkedfunction] - Breaking it down, \![*] puts the balloon's option icon in front of the choice (usually a > or something), \q sets up the choice, Displayed Name which is the text that will display in the ghost's balloon, then linkedfunction, which is what the choice is linked to when the user clicks it. \![*]\q[,]
OnMenuRun
{
	"\n\n\_q\b2"
	--
	if lastTalk != "" //What this does is check to see if the ghost has already said a random bit of dialogue on its own, essentially by seeing if the lastTalk thing is NOT empty (!= means "does not equal").
	{
		"\![*]\q[Repeat Last Dialogue,OnLastTalk]\n\n[half]"
		//If the ghost has said something, it will then display this menu option.
	}
	--
	"\![*]\q[Say something,OnAiTalk]\n"
	"\![*]\q[What's on your mind?,OnAiTalk]\n"
	--
	if ghostexcount > 0
	{
		"\n[half]\![*]\q[Talk to another ghost,OnStartTalking]\n"
		"\n[half]\![*]\q[Say something to another ghost,OnStartTalking]\n"
	}
	--
	"\n[half]\![*]\q[Give something,daviditems]"
	--
	"\n\n[half]\![*]\q[Config Menu,configmenu] \n\![*]\q[Functions,dosomething] \n\![*]\q[Check Friend Level,feelingscheck] \n\n[half]\![*]\q[Nevermind,CANCEL]\e"
}

//Leave this alone
OnLastTalk 
{
	"%(lastTalk)\e"
}


//item menu
Select.daviditems
{
	"\0\b2\_q"
	--
	if userbirthday == dayslot
	{
		"\![*]\q[Cake time!,bdaycake]"
	}
	--
	"\n\![*]\q[Scarf,giftscarf] \n\![*]\q[Water,hydratesir] \n\![*]\q[Trail Mix,feedsir] \n\![*]\q[Candy,noneformax] \n\![*]\q[Bandages,helphimpls]"
	--
	"\n\n[half]\![*]\q[Back to Main menu,BACKTOMENU] \n\![*]\q[Cancel,CANCEL]\w8\w8\w8\w8\w8\w8\e"
}

//scarf....
Select.giftscarf
{
	if friendlevel == 3 //highest!
	{
		if seenscarf == 0 //first time
		{
			seenscarf = 1
			
			"\0\s[0]\i[1]\i[12]Well\w4.\w4.\w4.\w4\w8\n\s[0]\i[28]\i[9]\i[12]I guess I could tell you.\w8\s[0]\i[9]\i[12]\i[18]\i[21] This bandanna is special to me because -\w8\s[7] It's actually the shirt I wore when I first came to Camp Campbell.\w8 My first summer there changed my life.\w8 I found my calling,\w4 my love for nature.\w8 It means a lot to me.\w8\s[0]\i[4]\i[7]\i[12]\i[18]\i[21] That's why I always keep it on me -\w8\s[0]\i[11]\i[19]\i[30]\i[9]\i[26] I love Camp Campbell.\w8\w8\w8\e"
		}
		else //1
		{
			"\s[0]\i[29]You wanna see my camper shirt again?\w8\s[0]\i[9]\i[12]\i[18]\i[21] Well okay.\w8\s[7] Here it is!\w8 Take your time.\xOh you're done?\w8\s[0]\i[4]\i[12]\i[18]\i[21] Okay!\w8\s[0]\i[9]\i[11] If you ever wanna look at it again,\w4 feel free to ask!\w8\e"
		}
	}
	elseif friendlevel == 2 //almost there
	{
		"\s[0]\i[29]You wanna know why I won't take your scarf?\w8\s[1] Well -\w8\s[0]\i[9]\i[12] this bandanna I have is just special.\w8\w8\e"
	}
	else //1 or 0
	{
		"\0\s[0]\i[29]Oh.\w8\s[0]\i[28]\i[9]\i[12] No,\w4 I'm alright.\w8\s[0]\i[28]\i[12]\i[4] I like this one.\w8\e"
		
		"\0\s[0]\i[12]\i[9]I'm okay -\w8 but thanks.\w8\e"
		
		"\0\s[2]Oh no you don't have to give that to me -\w8\s[0]\i[28]\i[12] I have my bandana.\w8\e"
	}
}

//hydrate before you diedrate
Select.hydratesir
{
	Davidfeels += 5 //you can adjust the numbers if you think it's too little / too much
	
	"\0\s[0]\i[28]Oh,\w4 thank you %(user)!\w8\i[9]\i[23]\i[11] Hydration is very important!\w8\e"
	
	"\0\s[4]Thank you!\w8\s[0]\i[28]\i[14] Say -\w8 have you drank any water today,\w4 %(user)?\w8\s[0]\i[9]\i[11]\i[26] If not,\w4 let's do it together!\w8 It's important to stay hydrated!\w8\e"
	
	"\0\s[0]\i[28]Oh right!\w8 I am going to take a hike later!\w8\s[0]\i[26]\i[9]\i[11] Thank you!\w8\e"
}

//feed him
Select.feedsir
{
	Davidfeels += 5 //you can adjust the numbers if you think it's too little / too much
	
	"\0\s[4]Oh,\w4 this is my favorite brand too!\w8 Thank you!\w8\e"
	
	"\0\s[0]\i[28]Thank you!\w8\s[0]\i[12] Do want to share this with me?\w8\e"
	
	"\0\s[0]Oh nice!\w8\i[28] I can save some for later!\w8\s[4] Thank you!\w8\e"
}

//candy!
Select.noneformax
{
	//Cute idea but prolly won't happen. Theres a whole episode of max holding a candy monopoly and David trying to stop him. He's not a fan of candy.
	//omg David is the candy police amazing
	
	"\0\s[2]GASP!\w8 Candy!\w8\1\s[14]Did you just say gasp out loud?\w8\0\s[0]\i[8]\i[16]\i[25] \n\n[half]I'm sorry,\w4 %(user),\w4 but I can't accept.\w8\s[0]\i[16]\i[25] It's a sugary slope!\w8\s[0]\i[8]\i[16]\i[29] Soon,\w4 we'll have ants,\w4 raccoons,\w4 bears,\w4 and-\w4\1\s[10]\i[27]\n\n[half]Diabetics.\w8 We know.\w8\e"
}

//bandages! I think having one option that gives a lot of affection helps haha
Select.helphimpls
{
	Davidfeels += 10 //you can adjust the numbers if you think it's too little / too much
	
	"\0\s[0]\i[11]\i[29]Oh!\w8\s[0]\i[12] Thank you.\w8 It's always good to have extra bandages on hand!\w8\e"
	
	"\0\s[0]\i[28]This would have been really useful last week!\w8 \n.\w8.\w8.\w8\w8\s[0]\i[12] \nThese inevitably will still get some use though,\w4 don't worry.\w8\e"
	
	"\0\s[0]\i[25]\i[4]\i[12].\w8.\w8.\w8\s[0]\i[4]\i[12]Thank you.\w8\s[0]\i[9]\i[12] We run out of these really quickly back at camp.\w8\e"
}


//birthday cake!! both options lead here
Select.bdaycake
{
	Davidfeels += 10 //even if David doesn't like cake I think he'd be happy you thought to spend your day with him
	Maxfeels += 10 //Max is the type who says he's just here for the cake, but is secretly glad you thought of him, yeah?
	
	"\0\s[0]\i[29]\i[11]Wow,\w4 thanks,\w4 %(user)!\s[4]\w8 Sharing some cake with us on your birthday...\w8 \n\s[0]\i[12]You're treating us instead of letting us treat you!\w8 \1\s[10]\i[12]\i[22]Yeah thanks a lot!\w8\e"
	
	"\1\s[13]%(Capitalise(hell)) yeah!\w8 Cake!\w8 \0\s[0]\i[9]\i[11]\i[26]Thanks for sharing something with us on your birthday,\w4 %(user).\w8 That's real kind of you.\w8\e"
}


//check feelings here
Select.feelingscheck
{
	"\0\b2(Progress with David: %(Davidfeels)\w8 \nProgress with Max: %(Maxfeels))\w8\w8 \n\n[half]"
	--
	if friendlevel == 3
	{
		"\1\0(David and Max consider you a great friend!)\w8"
	}
	elseif friendlevel == 2
	{
		"\1\0(David and Max are starting to feel like they can trust you.)\w8"
	}
	elseif friendlevel == 1
	{
		"\1\0(David and Max are starting to warm up to you.)\w8"
	}
	else //0; both < 50
	{
		"\1\0(David and Max are still wary of you.)\w8"
	}
	--
	"\n\n\![*]\q[Back to Main menu,BACKTOMENU] \n\![*]\q[Cancel,CANCEL]\e"
}



//If someone selects an option linked to BACKTOMENU, it will go back to MenuRun.
Select.BACKTOMENU
{
	OnMenuRun
}

//If someone selects configmenu, this will lead to TalkConfig.
Select.configmenu
{
	OnTalkConfig
}



//--TalkConfig
//This menu allows the user to change their name and other information, as well as put in their birthday and change how often the ghost speaks.
OnTalkConfig
{
	//BLANK CHECKS!!
	if user == ""; user = "Friendo"
	if birthdayprint == ""; birthdayprint = "????"
	if talktime == ""; talktime = "Indeterminate"
	--
	"\0\b[2]\_q"
	--
	"\f[bold,1]Username:\f[bold,0] \q[%(user),TEACHNAME]\n"
	--
	"\f[bold,1]Pronouns:\f[bold,0] \q[%(they)/%(them)/%(their),TEACHPRONOUN]\n"
	--
	"\f[bold,1]Your birthday:\f[bold,0] \q[%(birthdayprint),TEACHBDAY]\n\n"
	--
	"\f[bold,1]Talk Rate:\f[bold,0] \q[%(talktime),talkinter]\n\n"
	--
	"\![*]Uninstall: %(deleteshitai) \n\q[ON,deleteon] \q[OFF,deleteoff]\n\n[half]\n"
	--
	"\![*]\q[Back to Main menu,BACKTOMENU] \n\![*]\q[Cancel,CANCEL]\e"
}


//This is when the user chooses to change their name.
Select.TEACHNAME
{
	OnTeachName	
}


//This and the next few set up the pronouns. it shoots over to nameteach.dic and is set up so that it's all contained in one function instead of needing a separate Select.option for each choice
Select.TEACHPRONOUN
{
	"\0\s[0]\i[25]Oh?\w8 \1\i[14]What?\w8 \0\s[0]\i[28]Which pronouns would you like us to use for you,\w4 %(user)?\w8"
	
	"\0\s[0]\i[25]Oh,\w4 were we using the wrong ones?\w8\s[0]\i[12]\i[9]\i[26]\i[21] Sorry about that!\w8 Just let us know which ones you'd prefer instead.\w8"
	--
	"\b2\n\n[half]\_q\![*]\q[He-His-Him,OnPronoTeach,masc] \n\![*]\q[She-Her-Her,OnPronoTeach,fem] \n\![*]\q[They-Their-Them,OnPronoTeach,neit] \n\n\![*]\q[Back to Main menu,OnPronoTeach,menu] \n\![*]\q[Back to Config menu,OnPronoTeach,config] \n\![*]\q[Cancel,OnPronoTeach,cancel]\e"
}


//These two options toggle whether or not you can delete your ghost.
Select.deleteon
{
	deleteshitai = "ON"
	OnTalkConfig
}

Select.deleteoff
{
	deleteshitai = "OFF"
	OnTalkConfig
}


//--Talk Rate
//This is when the user chooses to adjust the talk rate in the config menu. The talk rate is how often the ghost will read some dialogue from aitalk.dic.
// %(talktime)
Select.talkinter
{
	"\0\s[0]\b2(Current interval: %(talktime))"
	//\0Oh,\w4 you want us to talk to you more?\w8 \1Or less?\w8
	//\1Ah.\w8 Finally want us to shut up,\w4 huh?\w8 \0Or!\w8 Maybe %(user) wants us to talk even more!\w8 What should it be?
	--
	"\0\n\n[half]\![*]\q[Every 30 seconds,OnTalkTimes,max] \n\![*]\q[Every minute,OnTalkTimes,high] \n\![*]\q[Every 3 minutes,OnTalkTimes,mid] \n\![*]\q[Every 5 minutes,OnTalkTimes,normal] \n\![*]\q[Don't speak,OnTalkTimes,silent] \n\n[half]\![*]\q[Back to Main menu,OnTalkTimes,menu] \n\![*]\q[Back to Config menu,OnTalkTimes,config] \n\![*]\q[Don't change,OnTalkTimes,cancel]\e"
}

//I changed this one to an On function as well!
OnTalkTimes
{
	if reference0 == "max"
	{
		talktime = "30 seconds" //this sets up the envelope properly
		aitalkinterval = 30 //this changes the actual rate
		
		"\0\s[0]Every 30 seconds,\w4 got it!\w8\1\s[4]%(Capitalise%(damn)),\w4 you must be really lonely.\w8"
	}
	elseif reference0 == "high"
	{
		talktime = "1 minute"
		aitalkinterval = 60
		
		"\0Every minute,\w4 on the minute.\w8 Got it!\w8 \1\s[10]\i[27]This is gonna get so old so fast...\w8"
	}
	elseif reference0 == "mid"
	{
		talktime = "3 minutes"
		aitalkinterval = 180
		
		"\0Three minutes.\w8\s[0]\i[28]\i[9] We can do that.\w8 \1\s[10]Sure.\w8\i[2] Whatever.\w8"
	}
	elseif reference0 == "normal"
	{
		talktime = "5 minutes"
		aitalkinterval = 300
		
		"\0Every five minutes,\w4 huh?\w8\i[9]\i[26]\i[23] You got'cha!\w8 \1\s[10]\i[8]\i[11]Sounds good to me.\w8"
	}
	elseif reference0 == "silent"
	{
		talktime = "Silent"
		aitalkinterval = 0
		
		"\0\s[0]We won't speak.\w8\1\s[16]Well %(fuck) you too.\w8"
		//\0You -\w8 You don't want us to speak?\w8
	}
	elseif reference0 == "menu"
	{
		OnMenuRun
	}
	elseif reference0 == "config"
	{
		OnTalkConfig
	}
	else //cancel
	{
		"\0\s[0]You got it!\w8\i[9] We'll keep up our rate of %(talktime)!\w8 \1\s[14]Why'd you make us go through this if you didn't wanna change anything,\w4 huh?\w8"
		
		"\1\s[10]\i[14]Change your mind?\w8 \0\i[28]\i[9]We'll stay at a rate of %(talktime),\w4 then!\w8"
	}
	--
	"\n\n[half]\![*]\q[Back to Config menu,configmenu] \n\![*]\q[Back to Main menu,BACKTOMENU] \n\![*]\q[Cancel,CANCEL]\e"
}



//This next set of functions handles inputting the user's birthday.
//I'm going to break down the tag. Basically, \! means a function is going to happen, open tells it to open something, inputbox tells it to open an input box, and OnUserBornMonth is the function the input box will be linked to, which is just below here. -1 means the input box should not time out. If you want to add input boxes to some new function for whatever reason, you should follow this basic format.
		//On a related note, you can raise any function at the end of any piece of dialogue by using this format - \![raise,InsertFunctionName]. This can be handy for testing things if the function is hard to get to run otherwise.
Select.TEACHBDAY
{
	if birthdayprint == "????" //haven't taught them your birthday yet
	{
		"\0\s[4]Ooh,\w4 yes!\w8 When is your birthday,\w4 %(user)?\w8 We can celebrate it with you!\w8 \1\s[10]\i[27]Sure,\w4 this sounds useful.\w8 \0\n\n[half]Tell us which month,\w4 first!\w8"
	}
	elseif dayslot == userbirthday //it's their birthday today
	{
		"\0\s[2]Wait -\w8 your birthday is today!\w8\s[0]\i[11]\i[28]\i[9] Happy birthday,\w4 %(user)!\w8\e"
		//-- //options in case we need them
		//"\n\n\![*]\q[Teach again,teachagain] \![*]\q[Cancel,CANCEL] \n\n[half]\![*]\q[Back to Main menu,BACKTOMENU] \n\![*]\q[Back to Config menu,configmenu]\e"
	}
	else //already input your birthday
	{
		"\1\s[14]Didn't you already tell us that?\w8 \0\s[6]Did you tell us the wrong date?\w8\s[0]\i[12] I guess you'll just have to tell us all over again,\w4 then!\w8 \1\n\n[half]\s[10]\i[8]Ugh.\w8 \0\n\n[half]Let's start with the month.\w8"
	}
	--
	"\![open,inputbox,OnUserBornMonth,-1]\e"
}

//--OnUserBornMonth
//This takes the value that the user put into the input box above and evaluates it.
OnUserBornMonth
{
	_tempmonth = TOSTR(reference0) //this stores what the user put in as a variable called _tempmonth
	_tempmonth = TOLOWER(_tempmonth) //changes it to lowercase
	
	//this is attaching the right value to the input from the user
	if _tempmonth == "january" || _tempmonth == "1" {bornmonth = 1; bornmonthprint = "January"}
	elseif _tempmonth == "february" || _tempmonth == "2" {bornmonth = 2; bornmonthprint = "February"}
	elseif _tempmonth == "march" || _tempmonth == "3" {bornmonth = 3; bornmonthprint = "March"}
	elseif _tempmonth == "april" || _tempmonth == "4" {bornmonth = 4; bornmonthprint = "April"}
	elseif _tempmonth == "may" || _tempmonth == "5" {bornmonth = 5; bornmonthprint = "May"}
	elseif _tempmonth == "june" || _tempmonth == "6" {bornmonth = 6; bornmonthprint = "June"}
	elseif _tempmonth == "july" || _tempmonth == "7" {bornmonth = 7; bornmonthprint = "July"}
	elseif _tempmonth == "august" || _tempmonth == "8" {bornmonth = 8; bornmonthprint = "August"}
	elseif _tempmonth == "september" || _tempmonth == "9" {bornmonth = 9; bornmonthprint = "September"}
	elseif _tempmonth == "october" || _tempmonth == "10" {bornmonth = 10; bornmonthprint = "October"}
	elseif _tempmonth == "november" || _tempmonth == "11" {bornmonth = 11; bornmonthprint = "November"}
	elseif _tempmonth == "december" || _tempmonth == "12" {bornmonth = 12; bornmonthprint = "December"}
	
	else //if the month isn't a valid month, like 32 or something.
	{
		"\0\s[0]\i[12]That's not a real month.\w8 Try again!"
		--
		"\![open,inputbox,OnUserBornMonth,-1]\![set,balloontimeout,-1]\e"
	}
	--
	//If it's a valid month
	
	"\0\s[0]So you were born in %(bornmonthprint).\w8 \nOn what day?"
	--
	"\![set,balloontimeout,-1]\![open,inputbox,OnUserBornDay,-1]\e"
}

//This adds an appropriate suffix to the number for the day.
Printday
{
	if bornday == 1 || bornday == 21 || bornday == 31
	{	"%(bornday)st"	}
	elseif bornday == 2 || bornday == 22
	{	"%(bornday)nd"	}
	elseif bornday == 3 || bornday == 23
	{	"%(bornday)rd"	}
	else
	{	"%(bornday)th"	}
}

//--OnUserBornDay
//This is much like the above function OnUserBornMonth.
OnUserBornDay
{
	_tempday = reference0 //storing the input in _tempday
	_tempday = TOLOWER(_tempday) //changes it to lowercase
	_tempday = REPLACE(_tempday,"st","") //if the user types something like 2nd, 3rd, etc, this will make it just the number. It'll just add the suffix back later on the one that actually shows.
	_tempday = REPLACE(_tempday,"nd","")
	_tempday = REPLACE(_tempday,"rd","")
	_tempday = REPLACE(_tempday,"th","")
	_tempday = TOINT(_tempday) //Converts it to an integer
	
	if ((bornmonth == 1 || bornmonth == 3 || bornmonth == 5 || bornmonth == 7 || bornmonth == 8 || bornmonth == 10 || bornmonth == 12) && _tempday >= 1 && _tempday <= 31) || (bornmonth == 2 && _tempday >= 1 && _tempday <= 29) || ((bornmonth == 4 || bornmonth == 6 || bornmonth == 9 || bornmonth == 11) && _tempday >= 1 && _tempday <= 30) //This ugly function checks if the day falls into a valid range. If it does, we set some variables and continue down.
	{
		bornday = _tempday
		borndayprint = Printday
		userbirthday = "%(bornmonth)month %(bornday)day"
		birthdayprint = "%(bornmonthprint) %(borndayprint)"
		
		"%(birthchecked)"
	}
	else //If the day isn't valid
	{
		"\0\s[0]\i[12]That's not a real day.\w8 Try again!\w8"
		--
		"\![open,inputbox,OnUserBornDay,-1]\e"
	}	
}

//--birthchecked
// %(bornmonthprint) %(borndayprint)
birthchecked
{
	if userbirthday == dayslot //if today is the user's birthday
	{
		"\0\s[2]Wait -\w8 your birthday is today!\w8\s[0]\i[11]\i[28]\i[9] Happy birthday,\w4 %(user)!\e"
	}
	else
	{
		"\0\s[0]\i[25]\i[4]\i[22]So that's %(bornmonthprint) %(borndayprint)...\w8\s[0]\i[9]\i[26] \nWe'll remember it!\w8 \1\s[10]\i[27]As if we have a choice.\w8\e"
		
		"\1\s[10]%(bornmonthprint) %(borndayprint).\w8\i[8] Okay.\w8\s[13] Do we get cake then?\w8 \0\s[0]\i[1]If %(user) wants to share with us!\w8 \1\n\n[half]\s[10]\i[22]\i[1]Sweet.\w8\s[10]\i[22] You better bring us over for the party,\w4 %(user).\w8\e"
	}
}



// the Functions option, linked to dosomething.
Select.dosomething
{
	"\0\s[0]\b2"
	--
	"Sure,\w4 we can lend you a hand!"
	"Of course we can help out!"
	"What do you need?"
	--
	"\_q\n\n\![*]\q[Open Calendar,CALENDAR] \n\![*]\q[Open SSP Preferences,sspconfig] \n\![*]\q[Empty Recycle Bin,areyousure] \n\![*]\q[System Information,ChoiceSystemInformation] \n\n\![*]\q[Back to Main menu,BACKTOMENU] \n\![*]\q[Cancel,CANCEL]\e"
	//\n\![*]\q[Check Email,MailCheck]
}


//This will open the calender function of SSP, an in-built feature
Select.CALENDAR
{
	"\0\s[0]\i[9]Sure!\w8 Here's your calendar.\w8"
	--
	"\![open,calendar]\e"
}

//This will open the same window that shows up if you right click your ghost and go to Utilities - Preferences.
Select.sspconfig
{
	"\0\s[0]\i[9]Sure!\w8 Here's the SSP config menu.\w8"
	--
	"\![open,configurationdialog]\e"
}

//buffer for user
Select.areyousure
{
	"\0\s[0]\i[9]\i[26]Yeah I can go take out the trash for you!\w8 No worries!"
	--
	"\n\n\![*]\q[Yes take out trash,ChoiceGarbagecan] \n\![*]\q[Don't take out trash,CANCEL] \n\n[half]\![*]\q[Back to Functions menu,dosomething] \n\![*]\q[Back to Main menu,BACKTOMENU]\e"
}

//empty the recycle bin.
// \s[-1] gets rid of the surface for whichever character it's attached to
Select.ChoiceGarbagecan
{
	_gomicheck = FUNCTIONEX("gomi.dll", "-n")
	
	if _gomicheck == 0 //If the recycle bin is empty.
	{		
		if phonecheck == 0 //first time
		{
			"\0\s[0]Be right back!\s[-1]\w8\b[-1]\c\w8\w8\w8\w8\s[0]\i[28]Oh %(user)!\w8 Your bin is already empty,\w4\i[9] no need to take it out.\w8\e"
		}
		else //1; have phone
		{
			phonecheck = 0
			
			"\0\s[0]Be right back!\s[-1]\w8\b[-1]\c\w8\w8\1\i[2]\w8\w8\s[10]\i[1]\w8\w8\s[10]\i[25]\i[19]Now that David's gone we can-\s[12]\0\s[0]\i[28]Oh %(user)!\w8 Your bin is already empty-\w8\s[0]\i[1]\i[25]\1\s[10]\i[2]\w8\w8\w8\0\n...\i[29]Max did you steal my phone again?\w8\1\s[16]\n\n[half]\w8.\w8.\w8.\w8No.\0\i[12]\w8 \n\n[half]Come on Max,\w4 give it here.\w8\1\s[16]\n\n[half]\w8.\w8.\w8.\w8\0\s[0]\i[12]\i[1]\1\s[10]\i[19]\i[27]Fine.\w8\e"
		}
	}
	elseif _gomicheck >= 1 //If the recycle bin is full.
	{
		"\![raise,OnGarbagecanEmpty]"
		--
		if phonecheck == 0 //first time
		{
			phonecheck = 1
			
			"\0\s[0]Be right back!\s[-1]\w8\w8\b[-1]\w8\1\s[10]\i[25]Hey,\w4 %(user).\w8\s[10]\i[23]\i[19] I just snagged David's cellphone.\w8 Let's text someone.\w8"
			--
			"\n\n[half]\![*]\q[Text Nikki,OnPhoneEvent,nikki] \n\![*]\q[Text Neil,OnPhoneEvent,neil] \n\![*]\q[Text Gwen,OnPhoneEvent,gwen] \n\n[half]\![*]\q[Cancel,OnPhoneEvent,cancel]\e"
		}
		else //1; have phone
		{
			"\0\s[0]Be right back!\s[-1]\w8\b[-1]\w8\1\s[10]\i[25]Alright,\w4 now that he's gone -\w8\s[10]\i[19]\i[23] let's text someone again.\w8"
			--
			"\n\n[half]\![*]\q[Text Nikki,OnPhoneEvent,nikki] \n\![*]\q[Text Neil,OnPhoneEvent,neil] \n\![*]\q[Text Gwen,OnPhoneEvent,gwen] \n\n[half]\![*]\q[Cancel,OnPhoneEvent,cancel]\e"
		}
	}
}


//This is for the SAORI, don't touch it.
OnGarbagecanEmpty
{
	_gomi = FUNCTIONEX("gomi.dll", "-f")
}


//here is the phone event!
OnPhoneEvent
{
	if reference0 == "nikki"
	{
		"\1\s[10]\i[19]\i[4]"
		--
		"M: hey\w8\w8 \n\n[half]Ni: hiiiii!\w8\w8 \n\n[half]M: good jb stealing Gwens phone.\w8\w8 \n\n[half]Ni: tanks! ^.^"
		
		"M: how r things?\w8\w8 \n\n[half]Ni: bornnnng T-T when r u coming back? :o \w8\w8 \n\n[half]M: whenever %(user) feels like sending me home i guess.\w8\w8 \n\n[half]Ni: oooh. tell %(them) i say hi. :D"
		
		"Ni: HEY MAX GUESS WHAT??!?!?!?\w8\w8 \n\n[half]M: u just ate something u werent supposed to?\w8\w8 \n\n[half]Ni: YOU BETCHA!!!!!!!!!"
		--
		"\w8\w8\w8\w8\c"
	}
	elseif reference0 == "neil"
	{
		"\1\s[10]\i[19]\i[4]"
		--
		"M: hey neil.\w8\w8 \n\n[half]Ne: Oh hey Max.\w8\w8 \n\n[half]Ma: u got ur nerd computer back up adn running?\w8\w8 \n\n[half]Ne: Yep! Fully operational!\w8\w8 \n\n[half]Ma: no AI bull this time tho\w8\w8 \n\n[half]Ne: Yeah yeah, understood."
		
		"M: send dog memes.\w8\w8 \n\n[half]Ne: What?\w8\w8 \n\n[half]M: cant u %(fuck)ing read? send them over.\w8\w8 \n\n[half]Ne: Why?\w8\w8 \n\n[half]M: because u actually have a decent internet connection on ur computer. send them.\w8\w8 \n\n[half]N: Sorry I can't. Busy.\w8\w8 \n\n[half]M: coward."
		
		"Ne: Why does David keep taking you there?\w8\w8 \n\n[half]M: because he's %(fuck)ing David. not all the lights are on upstairs."
		--
		"\w8\w8\w8\w8\c"
	}
	elseif reference0 == "gwen"
	{
		"\1\s[10]\i[19]\i[4]"
		--
		"D: hey I think you're a dumb, incompetent, poor excuse of a human being, and you're fired.\w8\w8 \n\n[half]G: Max, i know that's you.\w8\w8 \n\n[half]M: %(fuck). don't tell david.\w8\w8 \n\n[half]G: Promise to leave me alone for the next week and I'll consider it.\w8\w8 \n\n[half]M: deal."
		
		"M: nerd.\w8\w8 \n\n[half]G: sociopath.\w8\w8 \n\n[half]M: delusional.\w8\w8 \n\n[half]G: hellspawn\w8\w8 \n\n[half]M: Liberal Arts Degree\w8\w8 \n\n[half]G: ...\w8\w8\nG: %(fuck) you.\w8\w8 \n\n[half]M: I win."
		
		"G: stop texting me and give David his phone back.\w8\w8 \n\n[half]M: no\w8\w8 \n\n[half]G: i hate u.\w8\w8 \n\n[half]M: wooooooow. shocking."
		--
		"\w8\w8\w8\w8\c"
	}
	else //cancel
	{
		"\1\s[10]\i[27]\i[19]Pff. Coward.\w8"
	}
	--
	"\s[12]Wait -\w8 he's coming back.\w8\s[10]\i[2]\w8\0\s[0]\i[28]I'm back!\w8 Don't worry %(user),\i[9]\w4 it's all taken care of!\w8\e"
}


//This is when the user chooses System Information. this is done using saori_cpuid.dll.
Select.ChoiceSystemInformation
{
	os_name = FUNCTIONEX("saori_cpuid.dll","os.name")
	os_version = FUNCTIONEX("saori_cpuid.dll","os.version")
	cpu_name = FUNCTIONEX("saori_cpuid.dll","cpu.name")
	cpu_clockex = FUNCTIONEX("saori_cpuid.dll","cpu.clockex")
	"\0\s[0]\b[2]"
	--
	"\_q\f[bold,1]OS:\f[bold,0] %(os_name) %(os_version) \n\f[bold,1]Memory Load:\f[bold,0] %(memoryload)% \n\f[bold,1]Physical Memory:\f[bold,0] %(memoryavailphys) KB \n\f[bold,1]CPU:\f[bold,0] %(cpu_name) %(cpu_clockex)MHz \n\f[bold,1]Ukagaka:\f[bold,0] %property[baseware.version]"
	--
	"\w8\w8\w8\w8\w8\e"
}



//If the user selects cancel in a menu.
Select.CANCEL
{
	"\0\s[0]\i[15]Oh?\w8 Okay then.\w8\e"
	
	"\0\s[0]Alright.\w8\e"
}


//---- OnChoiceTimeout ---------------------------------------------------------
OnChoiceTimeout
{
	"\0\s[0]\i[12]Well,\w4 alright.\w8\e"
}



//---- Secondary Character Menu ---------------------------------------------------------
//This section has to do with the menu for the second character.
//There are no real set things for the second character to do, really. You can mostly add whatever functions you want to them, their menu is totally free reign.

OpenKeroMenu
{
	"\1\s[10]\i[2]\b[2]"
	"\1\s[16]\b[2]"
	"\1\s[10]\b[2]"
	--
	"What."
	"Yea?"
	"This better be good."
	"What do you want?"
	--
	OnrunKeromenu
}

//separated for ease of access
OnrunKeromenu
{
	"\1\b2\_q\n\n[half]"
	--
	if user == "KFC" //for testing
	{
		"\![*]\q[Test variable,testvariable]\n\n"
	}
	--
	"\![*]\q[Give something,maxitems]\n"
	--
	if bleeped == 1 //off
	{
		"\![*]\q[Watch your language!,bleeps]"
		"\![*]\q[Censor the swearing,bleeps]"
	}
	else //0; off
	{
		"\![*]\q[Uncensor the swearing,bleeps]"
	}
	--
	"\n\n[half]\![*]\q[Update,keroupdatecheck] \n\![*]\q[Bug report,bugreport]"
	--
	"\n\n\![*]\q[Nothing,keroCANCEL]\e"
}


//If you click cancel.
Select.keroCANCEL
{
	"\1\s[10]\i[27]Pff.\w8 Whatever.\e"
}


//item menu
Select.maxitems
{
	"\1\b2\_q"
	--
	if userbirthday == dayslot
	{
		"\![*]\q[Cake time!,bdaycake]\n"
	}
	--
	if phonecheck == 1
	{
		"\n\![*]\q[Chat with some campers,campertexts]\n"
	}
	--
	"\![*]\q[Stuffed animal,stufftoy] \n\![*]\q[Water,hydratechild] \n\![*]\q[Coffee,caffeinefix] \n\![*]\q[Trail Mix,feedchild] \n\![*]\q[Candy,chocomafioso]"
	--
	"\n\n[half]\![*]\q[Back to Menu,backtoKero] \n\![*]\q[Cancel,keroCANCEL]\w8\w8\w8\w8\w8\e"
}

//phone shenanigans
Select.campertexts
{
	"\1\s[10]\i[1]\i[25]Hey David,\w4 %(user) could use some help oraginizing the files on the other side of %(their) computer.\s[10]\i[1]\i[22]\w8\0\s[4]Oh!\w8 Sure,\w4 no problem,\w4 %(user)! \s[-1]\w8\1\n\n[half]\i[23]Sucker."
	--
	"\n\n[half]\![*]\q[Text Nikki,OnPhoneEvent,nikki] \n\![*]\q[Text Neil,OnPhoneEvent,neil] \n\![*]\q[Text Gwen,OnPhoneEvent,gwen] \n\n[half]\![*]\q[Cancel,OnPhoneEvent,cancel]\e"
}

//bear!!
Select.stufftoy
{
	if friendlevel == 3 //highest!
	{
		if seenbear == 0
		{
			seenbear = 1
			
			"\1\s[12]I-\w8\n\s[11]%(Capitalise(fuck)),\w4 %(user)!!\w8\w[16] Can't you just leave this alone??\w8\n.\w8.\w8.\w8\n\s[10]\i[8]FINE!\w8 Fine.\w8 Here\s[10]\i[4]\i[20]\w8.\w8.\w8.\w8\s[17]\nThis is MrHoneynuts.\w8 He's my frie-\w8 my stuffed animal.\w8 So you can't give me another one okay?!\w8 He's\w8.\w8.\w8.\w8 \nSpecial\w8.\w8.\w8.\w8but I dunno.\w8 I guess\w8.\w8.\w8.\w8you can look at him.\w8 Sometimes.\w8 If you like plushies so much.\w8\s[10]\i[20]\w8\s[10]\w8 \nAnd if you tell anyone\i[7]\i[3] I'll break your %(fuck)ing legs.\w8\w8\e" 
		}
		else //1
		{
			"\1\s[10]\i[8]Mmm\w8.\w8.\w8. fine.\w8\s[10]\i[4]\i[20]\w8\s[17]\w8\nHere.\w8\x\1\s[17]You done looking?\w8\s[10]\i[20]\w8\s[10]\w8 Good.\w8\e"
		}
	}
	elseif friendlevel == 2 //almost there
	{
		"\1\s[12]I-\w8\w4\n\s[15]Don't need one.\w8\e"
	}
	else //1 or 0
	{
		"\1\s[10]\i[27]%(Capitalise(fuck)) off.\w8\s[16] I don't need your pity.\w8\e"
	}
}

//I CAN'T CAPITILISE THE F OFFS FOR SOME REASON HALP
// o7 got it!


//hydrate before you diedrate
Select.hydratechild
{
	Maxfeels += 1 //I assume he'd be grateful for water at the least??  Sure. But not a lot
	
	"\1\s[10]Uuuh\w8.\w8.\w8.\w8 \nThanks?"
}

//DON'T MIND HOW CONVOLUTED THIS IS I HAD AN IDEA whoop
Select.caffeinefix
{
	if timeslot == "earlymorning" || timeslot == "morning" || timeslot == "evening" || timeslot == "night" || timeslot == "latenight"
	{
		Maxfeels += 10
	}
	else // lunch && afternoon
	{
		Maxfeels += 5
	}
	--
	"\1\s[10]\i[7]\i[11]Is\w8.\w8.\w8.\w8 \nIs that coffee?\w8\i[4] And it's black,\w4 just how I like it\w8.\w8.\w8.\w8 \i[22]\nThanks,\w4 %(user).\w8\e"
}

//feed him
Select.feedchild
{
	Maxfeels += 3 //I assume he'd be grateful for snacks at the least?? yep yep
	
	"\1\s[10]\i[14]Better than whatever the hell Quartermaster serves us.\w8\e"
	
	"\1\s[10]\i[11]Yeah okay.\w8\i[8] I'll take that.\w8\e"
	
	"\1\s[10]\i[11]\i[25]\i[4]\i[7]Is this the ones with MnMs in them?\w8 \n.\w8.\w8.\w8\s[10]\i[4]Nope.\w8\i[8] \nWhatever -\w8\s[10]\i[2] better than eating slop.\w8\e"
}

//candy time!!
Select.chocomafioso
{
	Maxfeels += 10 //again adjust these as needed
	
	"\1\s[10]\i[7]\i[23]A whole chocolate bar?!\w8 Sweet!\w8\s[13] \nPreston's gonna be doing my chores for the next month!\w8\e"
	
	"\1\s[10]\i[22]Oh Nikki goes crazy for these sugar sticks.\w8\i[8] \nSure,\w4 I'll bring one home for her.\w8\e"
	
	"\1\s[10]\i[22]\i[4]I wonder if I can start up my candy enterprise again...\w8\e"
}


//toggle bleeps
Select.bleeps
{
	if bleeped == 1 //off
	{
		bleeped = 0
		
		"\1\s[11]%^&*!!!"
	}
	else //0; on
	{
		bleeped = 1
		
		"\1\s[13]Oh thank god."
	}
	--
	"\n\n[half]\![*]\q[Back to Menu,backtoKero] \n\![*]\q[Cancel,keroCANCEL]\w8\w8\w8\w8\e"
}


//bug report! \_a[link]text\_a
Select.bugreport
{
	"\0\s[0]\i[25]Oh!\w8\s[1] That doesn't sound good.\w8 \n\n[half](Report bugs to \_a[https://www.tumblr.com/dreamy-kiwi/]Captain Kiwi\_a or \_a[http://www.characteroulette.tumblr.com/]KFC\_a.)\w8\e"
	
	"\1\s[10]\i[8]I knew there were bugs...\w8 \0\s[0]\i[29]\i[12](Report bugs to \_a[https://www.tumblr.com/dreamy-kiwi/]Captain Kiwi\_a or \_a[http://www.characteroulette.tumblr.com/]KFC\_a.)\w8\e"
}

//this will tell the ghost to check for updates
Select.keroupdatecheck
{
	"\1\s[10]\![updatebymyself]\e"
}


//Kero menu return
Select.backtoKero
{
	OnrunKeromenu
}


//that's it!!